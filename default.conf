server {
        listen 80 default_server;
        access_log off;
        error_log off;

        location ~* ((centos|docker)\d)/([^/.]+)[^/]?$ {
          return 301 $scheme://$http_host/$1/$3/;
        }

        location = /centos1 {
          return 301 $scheme://$http_host/centos1/;
        }

        location /centos1/ {
          proxy_pass http://centos1:80/;
          proxy_cache off;
          add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        }

        location = /centos2 {
          return 301 $scheme://$http_host/centos2/;
        }

        location /centos2/ {
          proxy_pass http://centos2:80/;
          proxy_cache off;
          add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        }

        location = /centos3 {
          return 301 $scheme://$http_host/centos3/;
        }

        location /centos3/ {
          proxy_pass http://centos3:80/;
          proxy_cache off;
          add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        }

        location = /centos4 {
          return 301 $scheme://$http_host/centos4/;
        }

        location /centos4/ {
          proxy_pass http://centos4:80/;
          proxy_cache off;
          add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        }

        location = /centos5 {
          return 301 $scheme://$http_host/centos5/;
        }

        location /centos5/ {
          proxy_pass http://centos5:80/;
          proxy_cache off;
          add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        }

        location = /centos6 {
          return 301 $scheme://$http_host/centos6/;
        }

        location /centos6/ {
          proxy_pass http://centos6:80/;
          proxy_cache off;
          add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        }

        location = /docker {
          return 301 $scheme://$http_host/docker/;
        }

        location /docker/ {
          proxy_pass http://docker:80/;
          proxy_cache off;
          add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        }

        root /usr/share/nginx/html;

        index index.html index.htm index.nginx-debian.html;

        location / {
          #try_files $uri $uri/ =404;
        }
}
